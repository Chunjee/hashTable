class hashTable{
	; User methods
	hasKey(byref k){
		return this[6].call(k, "Cdecl ptr") ? true : false
	}
	hasVal(byref v){
		return this[9].call(v, "cdecl ptr") ? true : false
	}
	valGetKey(byref v){
		return this[9].call(v, "cdecl str")
	}
	delete(byref k){
		return this[4].call(k, "Cdecl")
	}
	forEach(udfn,uParams:=0){
		; accepts function name, func / bound func obj.
		; binary code address, eg registerCallback("f", "cdecl fast") <- cdecl needed on 32bit ahk. Fast option recommended if ok.
		local cbid,r,cbfn
		this.setUpCallbackFunctions(udfn, cbfn, cbid)
		r:=this[8].call(cbfn, "uint", cbid, "Ptr", uParams, "cdecl")
		this.callbackFunctions.Delete(cbid)
		return r
	}
	forEachVal(byref val,udfn,uParams:=0){
		local cbid,r,cbfn
		this.setUpCallbackFunctions(udfn, cbfn, cbid)
		r:=this[13].call(val, "ptr", cbfn, "uint", cbid, "Ptr", uParams, "cdecl")
		this.callbackFunctions.Delete(cbid)
		return r
	}
	setUpCallbackFunctions(udfn,byref cbfn, byref cbid){
		if type(udfn) == "Integer" 
			cbfn:=udfn
		else
			cbfn:=this.icbfn
		if isFunc(udfn) && !isObject(udfn)
			udfn:=func(udfn)
		cbid:=this.callbackFunctions.push(udfn)
		return 
	}
	count(){
		local table := NumGet(this.table+0,0,"Ptr")
		return numget(table+0,	A_PtrSize*2+12,"uint")
	}
	length(){
		local table := NumGet(this.table+0,0,"Ptr")
		return numget(table+0,	A_PtrSize*2+08,"uint")
	}
	getMaxload(){
		return this.maxLoad
	}
	setMaxload(newMax){
		local table := NumGet(this.table+0,0,"Ptr")
		numput(newMax, table+0,	A_PtrSize*2,"double")
		this.maxLoad:=newMax
		return 
	}
	splitAdd(keys,vals, del:="`n",constVal:=false,isByref:=false){
		if del==""
			return this.splitAddNoDel(keys,vals,constVal,isByref)
		if isByref ; For very large input, pass keys and vals by address and specify true. Improves performance.
			return this[constVal ? 11 : 10].call("ptr", keys, "ptr", vals, "wstr",del, "cdecl")
		return this[constVal ? 11 : 10].call("wstr", keys, "wstr", vals, "wstr",del, "cdecl")
	}
	splitAddNoDel(byref keys, byref vals, constVal, isByref){
		if isByref ; For very large input, pass keys and vals by address and specify true. Improves performance.
			return this[12].call("ptr", keys, "ptr", vals, "int", (constVal?1:0), "cdecl")
		return this[12].call("wstr", keys, "wstr", vals, "int", (constVal?1:0), "cdecl")
	}
	rehash(newLength:=0){
		; "Manual" rehash. Typical usage, when removed many values, shrink the table.
		local table := NumGet(this.table+0,0,"Ptr")
		if newLength==0
			newLength:= (this.count() / this.maxLoad) * 2 	; If new length is 0, choose the new length to be half way from reaching the maxLoad.
		if newLength == this.length()						; No need to rehash if already at desired length
			return
		this.initSize(newLength)
		numput(this.nextSize-1, table+0, A_PtrSize*2+16,"uint")
		newTable:=this[3].call()
		NumPut(newTable, this.table+0, 0, "Ptr")
		this.size:=this.length()	; not really needed.
		return this.size
	}
	wasFreed:=false
	destroy(){ ; This is automatically called when the last reference to the table is released, eg,  myHashTable:=""
		if this.wasFreed
			return
		this.wasFreed:=true
		this[2].call()
		this.globalFree(this.table)
		this.globalFree(this.icbfn)
	}
	; Methods for viewing the table.
	toString(del1:="`t=`t",del2:="`n"){
		local cbfn, out
		out := []
		out.del[1]:=del1
		out.del[2]:=del2
		cbfn:=ObjBindMethod(this,"keyvalPrint",out)
		this.forEach(cbfn)
		return out.str
	}
	keysToString(del:="`n"){
		local cbfn, out
		out := []
		out.del:=del
		cbfn:=ObjBindMethod(this,"keyPrint",out)
		this.forEach(cbfn)
		return out.str
	}
	valsToString(del:="`n"){
		local cbfn, out
		out := []
		out.del:=del
		cbfn:=ObjBindMethod(this,"valPrint",out)
		this.forEach(cbfn)
		return out.str
	}
	toTree(opt:=""){
		local gui,tv,parents,cbfn
		if opt == ""
			opt:="R20 w400"
		gui:=guiCreate(,"Hash table - tree view")
		
		tv:=gui.addTreeView(opt)
		
		parents:=[]
		cbfn:=ObjBindMethod(this,"buildTree",tv,parents)
		this.forEach(cbfn)
		gui.show()
		WinWaitClose("ahk_id " gui.hwnd)
		gui.destroy()
		return
	}
	; Print tableData struct.
	printTableData(show:=true){
		local table := NumGet(this.table+0,0,"Ptr")
		local outstr
		outstr:=		"Buckets: "		numget(table+0,	A_PtrSize*0+00,"ptr	")		"`n" 	; Buckets		(the address)
					.	"tableSizes: "	numget(table+0,	A_PtrSize*1+00,"ptr	")		"`n" 	; tableSizes	(the address)
					.	"maxLoad: "		numget(table+0,	A_PtrSize*2+00,"double")	"`n" 	; maxLoad
					.	"length: "		numget(table+0,	A_PtrSize*2+08,"uint")  	"`n" 	; length
					.	"numKeys: "		numget(table+0,	A_PtrSize*2+12,"uint")  	"`n" 	; numKeys
					.	"nextLenInd: "	numget(table+0,	A_PtrSize*2+16,"uint")            	; nextLenInd
		if show
			msgbox(outstr,"Hash table data",0x40)
		return outstr
	}
	;
	; End user methods
	; 
	; Nested class
	class router { ; For familliar array syntax, i.e., [value := ] myHashTable[key] [ := value]
		__new(ht){
			ObjRawSet(this,hashTable,ht)
		}
		__set(byref k, byref v){
			return this[hashTable][5].call(k, "wstr", v, "Cdecl")
		}
		__get(byref k){
			return this[hashTable][6].call(k, "Cdecl str")
		}
		__call(f, p*){
			return this[hashTable][f](p*)
		}
		__delete(){
			if isObject(hashTable)
				this[hashTable].destroy()
		}
	}
	; Init methods. Most init methods are called by __new. NOTE: There is "static" init in maketableSizesArray()
	static init:= false
	maxLoad:=3.0
	__new(size:=23){
		if !hashTable.init
			hashTable.initBin(),hashTable.makeFnLib()
		this.icbfn:=registerCallback(this.traverseCallbackRouter,"cdecl Fast",5,&this)	
		this.initSize(size)
		this.initTable()
		this.initBoundFuncs()		
		return new hashTable.router(this) ; returns a "router" object, which has a reference to the new hashTable. Use all methods on the returned router object.
	}
	initBin(){
		; Can be freed via freeAllBins() (you shouldn't)
		; See c source
		local pnewTable,pdestroy,prehash,remove,pput,pget,pfindKey,ptraverse,pfindVal,pmultPut,pmultPutConst,pmultPutNoDel,pforEachVal,j,raw
		if A_PtrSize == 4 {
			pnewTable		:=	[2203276887,267526380,1009009680,807695499,874806411,539231431,4060086272,608440591,2245525272,2304275648,3036974531,0,4280550537,2311095767,2235855875,823424246,2332224466,2416232195,0,956416643,2347791830,4063765572,608964623,276007192,1328071,4060086272,139137295,2332312457,2302944324,3632863299,1528874115,834887518,2432035776,2425393296,2425393296,2425393296]
			pdestroy 		:=	[1398167381,2334977155,2336236612,2336498780,608471312,273320732,1165281669,2422669105,747307659,1961723320,649366833,0,2332317067,344522869,72613668,2299024779,1409229844,606898436,1409283465,1979090180,608472031,2333117212,3347255370,1926183169,2298645439,1409229828,608471812,2298514204,2336236612,3296920643,1600019244,2430664541]
			prehash			:=	[1398167381,2336025731,2337285188,2337547380,71994128,2333622923,4286939452,673479817,23430159,3229810688,608471297,269480468,1284048962,267520036,203703313,1149830795,1149961252,76097572,274136868,3347693701,606356617,20022287,1149960192,9130020,2299809931,1351291991,265454864,60036,608487168,44,612141824,2332592940,4286953788,9274383,3062693888,0,203687111,4278190080,72846102,199,3314089984,2299180815,1200292944,1715440392,1166657925,3380875016,2197815296,3224437442,443,3417247488,16958083,3252259272,3643344353,3071265673,2238119498,837187017,611645394,2500103464,0,606360715,143327747,175491461,33769,7769344,25936265,4168466565,4286917001,1149993589,9130020,2198884491,19670084,740588683,2182076217,4294967125,796185221,1344564363,143392561,2243497099,2417587401,2520205,210311563,72810276,3649690501,1166799477,273713920,956417923,2346152663,604276992,2332317439,2337285188,604276992,2332317439,2200183876,1583037636,2428722527,2520205,2263558281,1642709041,2214592511,3224452292,1566531163,2425393347,2425393296,2425393296]
			remove			:=	[1398167381,2334977155,256386140,2238067639,3817082870,251658240,29349559,822083584,264843712,3246643119,153914625,4203335681,688251585,265783802,1716196535,3816149637,405040265,1076133003,1066127921,2333112311,2416217351,1149843595,4286913572,11109391,3979411456,1468778885,1714058244,812986937,1820966961,317396004,649366928,0,1127003919,1110194534,3229816437,1976056065,611093487,608471828,1015244312,427032578,4253616011,74760325,3102459785,3089941635,2,1566531163,1961723331,2298973016,1149960261,344540196,72417060,2299021195,1149969412,1358906404,608471812,607947076,2332315903,2336236612,342393600,751076097,440,1600019200,1153942365,6180,3224436736,971622705,2214592511,3224448196,1566531163,608472003,50972,2332033024,2666202199,2425393296,2425393296,2425393296]
			pput			:=	[1398167381,2338122883,2340168788,2339644540,1719149684,251673219,82308,3955241216,2379778306,2204500312,1962957372,4492788,609519876,604277032,1418401791,3314100260,3071262769,2305180172,2197833036,3275293120,1150021747,1418555428,9128996,270816393,1210340493,203707529,2299547787,2298750068,2332566612,604276992,2198362111,21767292,874792073,12157967,80150528,3108,1712848640,2298494595,3414429633,822083584,2298670016,22580696,1581024102,2381608192,2298740804,2301109324,402596868,2422657585,1443673871,1342998886,956416643,2347857626,2301109324,1149961281,29838372,0,2231921033,2336978112,2301895748,608471816,608487280,44,2346397952,342919936,2366654603,1418264918,1351165988,611114772,608995624,610044200,611114796,138992680,3923757529,1316477149,3296968753,1600019292,1150010205,1418424356,9127972,210305163,2309680016,138447814,4280550537,1854473303,1556382472,440,1600019200,45663069,822083584,4274514395,45678591,822083584,4282247643,1150025727,2089381924,76088356,207093540,1881439371,4290250633,3959422975,2425393305,2425393296,2425393296,2425393296]
			pget			:=	[2336025731,2369791044,2334925908,609519872,609520912,609519912,273713932,136598665,1210340491,69489801,76087435,608471844,139525956,2089013809,1963011108,139496195,3296972937,2425406268,2425393296,2425393296]
			pfindKey		:=	[1398167381,2332355715,253502556,2238067639,3447984118,251658240,29218487,822083584,264843712,3246642607,154963201,3934900225,688251585,265652714,1716196535,3816149637,1962398257,76357668,149,611093248,5605668,673469579,711,1418395648,747313188,267224322,33924,7769344,1435224453,1713665028,645214777,2305212465,3942786164,884412170,876176963,2200008002,3359179200,3071274869,1711416436,3816579,1166749300,1958774016,3955591443,7769539,251676043,35943607,3983917189,673465483,131271,3901292544,1527039107,3277676382,673465483,65735,3296919552,1541966084,3277676382,3224502065,3375485489,4294925545,3955241471,2425393363,2425393296,2425393296]
			ptraverse		:=	[1398167381,3968064305,608471868,611617616,2332068692,3380940872,16221199,344784896,157,609519872,2333117228,3984955948,13927439,4281401344,4018796681,1150010761,1552506916,1149832228,1149964324,1149852708,1200293924,608471304,71797508,4280550537,2203591764,2020933624,3229948286,4169360244,2339468545,2247985415,2189692864,2298478592,2210130887,28966648,1962934272,2298973015,2301109324,2334401604,76088391,72810276,2299021195,1459561476,607947012,2231654143,608472045,608996132,2301981736,1418395717,311119908,18115203,2876557701,4294966968,1019511807,1566531163,649366979,0,2850801969,3347708041,4294922729,7769599,1344558219,740588683,311104139,3946448009,608471997,2332068688,3280146504,264976641,4294904194,112895,3052077056,2425393296]
			pfindVal		:=	[1398167381,2333142147,254551132,2238069687,2844004351,822083584,29459401,1262256998,153914624,1150022517,9118756,2232438923,609520082,2338944008,608487168,4,608471296,608471820,609520396,2419362564,1031075461,1452001669,1713992712,729102905,881442865,2299783972,666668534,0,1127528207,1110718822,3229824629,1976056065,607423471,708608870,2334815232,1979090230,608469955,1149960452,1144587300,2775910436,823182467,1600019392,3062743901,0,3945018507,71732182,1527825539,3277676382,3375492401,4294925801,2425393407,2425393296]
			; -O3:      	
			pmultPut		:=	[4281423701,3968029526,615811964,160,3347645163,1711359885,4266032259,267613440,2626367159,38948,268403968,1059341461,807683271,0,673465543,0,874792135,0,649366928,0,874792075,673465347,256052365,2238054839,1712354496,2215635001,1243,673465475,1725819649,125169029,1059355776,2235004160,608487423,64,824931584,7769563,807683211,2619640971,16777216,1091341784,1711388431,678740101,266877286,278404,29590272,3224492779,673465345,1076118727,1,1989002731,666668288,0,1978500454,612139019,2232352831,1221,2232418181,1213,673475723,36521101,1210336393,2334393481,9708676,285147136,1149889925,2215589924,647,874792075,268457101,2314224269,55321668,9970820,3314089984,941900939,1143237769,957368461,3247640525,2357972361,38948,969998592,266897864,3356017043,81560591,1284177920,4186122276,3481669390,2332033028,2202281028,3906015200,3766737143,264780039,3375481159,2215624837,179,2552540299,2332033024,2201232460,3071214072,2332052812,1714955372,251678089,324228,613190400,152,251852931,4061220023,38635878,80708623,2357919744,38948,66618112,290240271,1300850420,2894335748,2332033028,9970828,4169334784,1287065348,2305226257,2215577165,1161,2552532107,2197815296,3071215096,1727533388,252202377,288388,613190400,152,252180611,4195437751,172853606,71533839,2357919744,38948,1421283072,129629201,1711276032,2332841353,690496596,2378170818,1418328170,3988870180,22383875,1143231625,2298733249,2337285204,2369266772,1141047852,3526446116,2552529923,1711276032,2197843727,3313697218,281051920,4031058191,1143231545,1150019959,3238088740,1411662907,2215627401,267,874792075,1143231625,1143229579,1149878785,2223721508,38948,23694592,673475641,1343534863,941900939,1209305446,2249190025,215,1277455499,1277449353,3506563465,2552534155,251658240,2336885943,1716266068,2337279113,2370053196,1413022289,1418274852,2249149476,163,3506563465,2552534155,251658240,2336885943,1716266068,2337279113,2370053196,1413022545,1418274852,2071350308,3506563465,2552534155,251658240,2336885943,1716266068,2337279113,2370053196,1413022801,1467361316,2894850441,38948,265355520,5065911,1342998886,1143229579,956649869,1982342228,608996150,265355572,5065911,1342998886,1143227531,956743811,1982342212,608996122,18124084,2552532107]
								pmultPut.push([251658240,2337346743,1714955340,2336298121,2335712324,826811468,458526189,1820943874,2223767048,37924,605325568,1143231625,1284182271,3314102308,2619638923,2365587456,3224455180,649366928,0,1091876623,1163168102,29393664,4034118457,874792075,1143231627,4160866609,673465347,357337446,608471550,608471860,33030448,610045400,608471404,612666160,144,1552482443,1552748580,1552508964,1552616484,1351301156,610044176,609519876,2298514184,2223711236,37924,139525888,1814330499,264472833,96132,612666112,148,203687111,4278190080,609520400,608996204,51000,2298478592,3531933800,251938953,50309,614238976,144,1747209355,311104395,2307523721,3339750360,2892868,822083584,339905499,2198882955,1149829568,1116284964,611114772,608995624,610044200,611114796,139123752,3923757529,2265962717,313,1076118667,2232402053,288,3341727503,2630724,2332033024,9970844,1776877568,2315255803,666668534,0,2215640965,4294966256,3062743089,0,251773059,1715541175,256250937,99461,264714496,97414,3531957760,3342459509,4223829007,1418461183,3531948068,8225807,3271622656,4294684649,2332264959,9446532,1122566144,2248146943,1753485311,822083585,29393856,1091876623,1175730534,3342409333,2238061174,971666898,608487367,64,1099239168,3925868539,4294966031,1153943353,16420,2215575552,4294966015,265454950,4294648708,608436735,614239016,152,4294618089,609520639,2243965248,2206430674,3224468676,1566531163,649366979,0,2299019403,2223711236,37924,72417024,941900939,2334393481,9708676,1358888960,608471812,141265216,2215624837,4294967008,3095184515,1,1566531163,612666307,148,69485705,2418312331,2298478592,2223711236,37924,206634752,2418318475,2298478592,4271565059,1284243455,1821059108,3526440996,1143227531,1277451401,2520205,1344059151,1432127846,29524736,4034253113,1277451403,4294785769,440831,3370713088,3120562171,5,4294688489,309759,3035168768,3120562171,3,4294683369,178687,2699624448,3120562171,1,4294678249,264714751,4294593412,3531958015,4269835279,3230007295,441,3242462976,3655975681,3355443193,4203588,3909091328,4294965703,2425393296,2425393296,2425393296]*)
			pmultPutConst	:=	[4281423701,3967898454,172,3357842571,2332033024,13640884,116064256,2520205,1200473993,2088986113,1962999366,2311074291,824976508,2345109961,13378732,82509824,3515467657,2365736845,2204500305,16647548,76410485,612141330,612141908,2311751980,13640884,1284046848,1149845540,3071237156,2245953798,608487423,56,614238464,200,608474383,1149855315,2223714340,52260,266371840,3640125649,956817539,3242659784,1149879689,3364450340,2223630377,32804,4164979968,2198071489,1149829568,3770774564,608471299,4282551676,1149888553,1150118948,3979411501,2015642761,3424945155,2298478592,8660100,2223702016,52260,281051904,1612989577,649366928,0,941900939,210626561,28774214,1958774118,1144743440,2215587876,1397,3942761859,2088986335,1962946596,612139019,2232352851,1824,740574347,2232402053,1812,1009009863,0,36521101,1143227529,2334393481,12854404,285147136,1149889925,2215587876,510,941913227,1334691721,911510800,4030893328,1277445257,3357836291,956301312,613190600,200,608473871,1555435336,3506522148,2467286841,264964289,425860,251495168,108430863,3766681600,608487183,72,4159230208,132154328,1192224825,264275397,36996,614238976,200,251787395,1718815927,2215579529,1790,3357838475,2197815296,3071214328,1727140172,251809673,448644,615811840,200,251918467,4095102135,72321382,112362511,3071213568,2213942860,2305164536,2215577167,1683,374126351,100172792,139430246,108299279,3071213568,2214205004,2305165304,2232355407,1621,374650639,608487420,1864,1468622336,2347469068,2337023060,690758780,2378170819,1552545867,3254872100,807683075,3357840387,3238002688,1502413801,2378772737,56628,1552482304,2626377764,51236,611617024,615811940,208,40832870,2197930371,3229814978,1074859792,608975856,2313777752,13640884,1149960192,1955285028,2089378852,2626235428,51236,1005584640,258483316,34180,2346682624,2335712348,2368742516,3071214356,2305185556,1351435796,1993685249,319589737,1326233359,1443662182,956453005,2371319509,3071218444,2305183500,1351439884,1993685251,319589701,1326233359,1443662182,956584077,2368960213,3071218444,2305183500,1351439884,1993685253,319589665,956743811,213323717,210331215,2333046358,2369266780,3071214356,2305185556,1149978132,1955278884,4281418788,813468006,608472062,604277084,3290727563,4278190080,2344716560,2235573316]
								pmultPutConst.push([3749973952,989855745,2371888204,2467237953,612645314,204,146838287,813961154,2197815300,239084668,69568015,1552613376,3682955300,63013903,2223702016,52260,33260288,1711322895,2215575945,1191,3424945291,2197815296,3071214331,2305163840,2215576129,1157,3424945291,2197815296,3071214587,2305164352,2215576641,1123,3424945291,2197815296,3071214843,2305164864,2215577153,1089,3424945291,2197815296,3071215099,2305165376,2215577665,1115,3424945291,2197815296,3071215611,2305165888,2232355393,1081,3424945291,251658240,1712079031,3087810953,7,1814330499,2339468806,829957236,611092955,608471364,613714760,132,2089539721,2626366500,51236,2311979264,615812085,208,175050598,2197930115,3263369413,1292963600,608451056,2347333492,2303206468,13116572,1552613376,1821080612,2089370660,3028888612,53284,1004011776,8397980,2215575552,146,3424957579,251658240,1715868855,2202080393,1144586688,2054570020,1175762703,1076130955,1091864934,956387469,2338813654,13378716,3071213568,2305184540,1351438620,1993750786,614239057,204,1394390799,1360824678,956518541,2335930070,13378716,3071213568,2305184540,1351438620,1993750788,614239013,204,956678275,481759174,478766675,2333046353,13378716,3071213568,2305180436,1149976852,3677443108,2619651213,2298478592,1715741772,2332105865,2369266756,9970844,1141047296,3892390948,941900937,3223618699,2332033024,611617024,610044176,611617548,273713968,69497993,136598665,76087435,612666148,196,2198360319,10233020,2298544128,608996293,1619267396,2332033025,12854404,1284046848,80167972,3108,2333146880,2336498764,3341821044,0,138971392,2619640971,2298478592,3380937840,18515215,3029008384,49188,613190400,152,311105163,2307523721,3339750384,3417156,822083584,339905526,2198887051,1149829568,1116287012,611114772,610044208,611617072,611114804,139123760,3923757529,2265962717,330,1009013899,2232406661,259,3492054155,822083584,615812077,200,1711322895,807683209,4294602729,608472063,264275244,4294615940,2347993599,2334925948,13640884,3224436736,2520205,251773059,1715541175,1967526969,1992767811,3531957823,3342461557,740588681,3357842569,2298478592,13640884,1153892352,15396,2215575552,4294965856,1153942785,80932,1374224384,2315255802,666668534,0,2089404217,2626235428,51236,615811328,208,4196828175,2238119935]*)
								pmultPutConst.push([29979858,3923675589,4294965720,649366928,0,2332050825,12592260,4008247296,2348810238,1284048960,76104740,612666148,196,2332315903,2301633604,2223711236,50212,72417024,1009013899,1143229579,1300877957,4253290248,2181038078,44228,112640,1583022080,834887007,612139968,2265908844,4294966491,3424945291,2332033024,13378740,3071213568,25781760,440,4249282816,2223767551,50212,608471296,612666116,192,2334393481,12854404,1358888960,615811852,192,2313750153,2315255806,2336498796,824976508,609520576,615287616,204,3492066443,2415919104,2520205,1163704079,478766592,29393729,4034249273,1143237771,740588681,3492066441,3909091328,4294966606,740588683,807685259,3029062193,53284,481758976,478766672,29524817,4051031353,740588681,3492066441,3909091328,4294966034,1153941553,80932,3305177088,4294501353,309503,4192796672,3103784955,3,4294701033,178431,3857252352,3103784955,1,4294695913,440575,3521708032,3103784955,5,4294690793,608487423,1608,4189055232,1153957887,346148,2733178880,3355443193,71836740,3909091328,4294965653,1210336455,3,4294543593,608487423,584,4185647360,1153957887,84004,1860763648,2432696313]*)
			pmultPutNoDel	:=	[1398167381,2340220035,10495148,3029008384,39972,608487168,1076,1961723136,2210410775,2204500416,16664188,1149891957,3221303332,874792073,2089545865,3766693924,4159230223,132154328,1192228921,2314023367,608471489,704153916,608471496,4164980040,2198071489,1149829568,3770762276,608471299,2214103372,3358130664,1076118665,2299069581,22291524,608471536,273059152,941900937,2552530059,1711276032,6831235,22774799,3163226112,40996,268403968,89989,1015244288,2215575662,996,2485421195,3338665984,271364,285147136,1150011273,76100644,612666148,148,3280539903,2552530059,822083584,79106002,126445160,2305212465,3071214151,2305191428,2305163859,612666115,144,1814318221,1747211405,2332149123,608995584,609519888,273713932,69500041,136598665,76087435,612666148,148,2198360319,23864444,2215625353,652,673465481,2485421195,3338665984,795652,285147136,2332579977,3345753180,0,75008256,673469579,2232408965,588,2418326667,2332033024,2338858060,2299693847,4169763332,1153896587,11300,3677421568,2333360779,3229814858,608471297,339904808,673475807,673467529,740580489,673475807,3641199324,3723091913,3448115160,2348810238,9708676,1149829120,2223703076,36900,604276992,2485421195,4278190080,3163229264,36900,2332526848,9970820,2204499968,251684924,4294878597,2093253631,440,1600019200,3062743901,0,2485421195,3338665984,271364,285147136,1150011273,76100644,612666148,148,3280539903,2552530059,822083584,610024393,79105848,1334404712,3264417538,2366081382,3325628483,146838287,3246657474,2197815297,238036092,28739087,1284177920,3380952100,25854991,3071213568,33129222,251890022,134020,1186402048,49906434,37980518,32146447,3071213568,4186113094,1133078019,3380875012,251658241,2198226615,2305164537,2215577155,424,138852111,1711667587,252199817,100228,1186402048,133792522,172198246,23758095,3071213568,2305166406,129502275,2197815296,104866940,1284194934,1149850660,3224447012,2332759181,1716528204,2197909263,3246588352,281182992,4030861583,1143227451,1284237682,1149979684,3355519012,1210338361,4258759695,3062759423,0,1175762703,1125419366,956416131,254813252,4294818950,347541503,344548934,22056259,807687225,4255614479,3071279103,2305185292,1351439116,609499394,2458259248,268435453,1716915383,2371030153,1413022544,2249142308]
								pmultPutNoDel.push([4294966653,1443673871,1393330534,956584077,254813268,4294797446,213323775,96502614,807683129,1393330534,4250109455,3071279103,2305181204,1189692180,2432696317,2520205,2223702665,36900,4256884992,2422669311,2299019403,2301109332,2223711236,37924,72417024,2485421195,2298478592,1358898236,609520388,140151080,4294743017,7769599,2089009201,252067876,4294893959,112660479,3087239526,1,4294912233,7769599,807685259,1989001265,666668288,0,1175762703,1125419366,956416131,3924915649,4294966461,1720,4271499520,2422669311,1464,4270713088,3062759423,0,1208,4269664512,3062759423,0,952,4268615936,3062759423,0,696,4267567360,3062759423,0,440,4266518784,3062759423,0,830260355,1600019392,2425406301,2425393296]*)
			; -Ofast:
			pforEachVal		:=	[1398167381,2337074307,1718101100,32131,24478735,3677421568,1711391619,6126723,456428800,1150022261,4281425956,9171593,2232436875,2372957385,48436,1955135488,814429220,2243835019,3344266486,3155012,2231369728,139365339,3071225972,1161389569,825128192,609520064,2417290028,2520205,1163179791,339305984,2172981057,2197815296,3627614656,1418455669,2204511268,1946161468,2234944291,2344383990,2338333764,273189632,956417923,3096474319,1,1531757699,3277676382,1948533899,203717769,69487753,740578441,270812297,1881425035,136594569,2298758795,1426007044,4169362468,609520639,2307133228,2113929216,1958774045,33063871,4284318991,1955201023,915091492,2422642155,740578443,4169370603,608487422,300,1015353088,2348810239,609519878,608471356,71732024,2334393481,4284752964,1183515728,604277000,1680098443,2332315903,2305041476,1358898228,611617540,608471856,609520440,1962313020,2332461349,2338333812,2334925900,342786870,1976141057,3922102571,4294967075,740574407,0,1955306987,1284202532,915092516,76101259,835513102,3923456502,4294966930,3092038787,4294967294,1566531163,2425393347,2425393296,2425393296,2425393296]
		} else {
			pnewTable		:=	[1398167381,955024200,611592463,1221495072,2303513993,672097991,2669043,3539927040,1220576584,1786037129,3242783113,3590259681,1220576584,1517552521,678753925,838815373,3787540690,1712384771,8658703,0,1208191816,1208533635,3343436345,4100,3967090688,2149876875,4060086272,275976463,142313800,3340268425,7235,1133051904,3632875552,611592207,3296938016,1600019256,3224486749,2425417451,2425393296,2425393296]
			pdestroy 		:=	[1465209921,2202555222,2303205612,294340822,2345437513,3380942922,3979428724,4202255,2298645324,478890472,3682945216,2422614132,1211861832,4278733707,2336753750,1459556427,3649652744,4294674760,2236090454,1239512575,2334397579,3313702986,1926052097,176900291,1208506111,1225279115,1210322059,1528874115,1096638302,3774826588,2425393296,2425393296]
			prehash			:=	[1413567809,1398167381,955024200,1221822792,2303267211,541756364,138578764,2285144897,2244512072,1367609334,2197815297,267518400,2299550224,608471537,327895072,1210078207,2303246469,830738375,1224736769,2334393483,1468603472,407931676,2215629445,236,2337074481,1307150592,1304964235,2215636357,154,6329,1293156096,1208507787,199,2303262720,3071230402,1485392907,1166756104,1837845776,3380962816,272795977,13599759,3224436736,112705,826605568,3263775945,1090904769,1154002703,2302788137,1368211920,1103626497,1393342223,1725008201,3715484037,4143436337,3242774665,55051232,277563399,1976730952,8579338,2422603776,1220708680,2236088971,1291154880,2236420745,1837436909,1241513983,2334393483,3313702992,265632001,4294920578,1959953919,1290613039,3918069899,3356265289,1959363912,2035480,4281437000,2236090451,4052306166,2336879221,1351296004,29721368,3547518265,4278750024,2336819283,1409229836,4169746440,952402760,1566531163,1564564545,2149519299,0,3943729484,3921686921,4294967138,2202583089,1583036612,1547787615,2428722497,2425393296]
			remove			:=	[1413567809,1398167381,686588744,414650181,1221495112,1164367753,2215631749,231,3551989569,441,1170223360,2422657585,30519055,3251276240,3391686114,2369900937,2303263058,747456722,3071230226,2238074900,1222473170,3526430347,2300080631,294340816,3257699660,6130505,266044744,41604,3828434176,1221756229,1946700683,960783916,825062681,3956421056,2149519128,0,1287065412,2202534401,1164313280,1962937403,29524751,1976711492,1015244519,578027561,1224969032,2236144777,1208317120,3035349897,696,3296937984,1600019240,1096565085,2236466013,1212904676,2303263627,1476338692,1267419144,139984656,4292446536,2336753751,476611334,112641,2202533888,1583032516,1547787615,834886977,1170223597,1089065521,838860799,3296938176,1600019240,1096565085,3343500125,69,2336751616,2934638667]
			pput			:=	[1430345281,1465209921,2202555222,1097220332,1207974275,2303250313,3314109654,265128269,84612,3955241216,2149519113,0,1351473289,2202101249,21884,1976797512,38309359,4291363144,3297331478,2422652977,3229860489,3071230209,956323148,2302764760,3967177740,1208453960,1009013901,608996684,1082868792,1418283032,2303205412,143345898,2198886143,20718716,264603977,49028,1620224,385810432,8225638,3330885888,13992975,3224436736,258345195,17439,1351473289,2088986113,1207959637,4034253705,1208109197,385861889,258396721,17439,3263418761,3071230977,956321092,2302961370,3967174660,138840393,1009009803,444233,1291845632,2232444553,1296397504,1207989641,258348939,258392303,1116457455,29393692,705644786,474122688,4061676171,3358199624,1247350770,789538320,828143553,3296938176,1600019264,1096565085,3277734237,4202255,2332527432,1211638868,2303459467,2951467060,273189704,3087554303,1,275089741,1086620488,1566531163,1564564545,3116588609,2,3437878065,3120562174,2,1072290609,1224736767,2303259273,408354809,3087501640,4294967295,2425394155,2425393296]
			pget			:=	[1223459656,1208060744,1009011853,1288866121,941902989,1153599820,1209548939,539249801,1091078984,823153407,612139986,74776892,273713992,1221626184,3276326019,2425393296]
			pfindKey		:=	[1398167381,1209710351,1210348683,1725139273,2215631749,172,3218323215,1,826654769,3618574290,4203335681,688251585,1104644602,1224823437,2370359945,255922732,1716720823,3715486341,4148286001,1221626352,1208213697,1090585739,113709449,0,1958774088,3531949418,138971980,1097214836,762648891,3375485489,258349035,17439,1152847685,2202534417,1164313282,1964180539,29459216,1976645956,2202101479,1946167612,277563416,1959953736,3498657797,113752043,2,1566531163,17221571,1526726656,3277676382,3224497457,826659377,830794706,2430725056,2425393296,2425393296,2425393296]
			ptraverse		:=	[1447122753,1413567809,1398167381,1223459656,2303253297,294340822,1305381193,2302985353,407538637,2215627141,246,2298645324,1015892184,197,1015762176,2089371840,2236430372,3431206911,1157627904,2336812337,11543684,2336817152,2302742615,1334528473,3901309192,608471368,3573498144,1962932355,2233302655,2204071104,2037711352,1296010057,2236153225,2256801791,1224736768,3203137417,1107228803,440,1146778880,874792073,139430729,4282354505,2336819286,1459556431,4186524680,1292392191,2336550277,1949574212,2106149183,378226944,18639491,1958774085,4294883505,2202599423,1583040708,1547787615,1581342017,1724079937,8658703,0,3955241285,4287188134,258380267,17439,1209437001,941900939,1209174856,3942792329,378227124,2199407243,3409510851,4278878735,28901375,3942645760,2425393325,2425393296]
			pfindVal		:=	[1398167381,414650177,266044774,37252,3526444288,21138753,1015234918,2303262784,881674434,1223521536,1116410251,1958774040,982206561,1208084611,147287181,1293912908,1165286277,1305642309,1947224971,960587308,825128217,3956421056,2149519128,0,1287065409,2202534401,1097204416,1962937403,29524752,1976711492,2202101479,1946169660,462114072,1977320781,3347269819,4013508616,3224480373,1566531163,1133201859,1600019208,4130456413,3922866501,4294967163,2425393296]
			pmultPut		:=	[1447122753,1413567809,1398167381,2028766024,2336807729,14689468,2303197184,12592268,2303197184,13116564,2303524864,3465104580,3548971755,1401804937,1015244289,4067754055,608472392,3071231080,266044735,992232597,114241,3979411456,608471368,1150109776,826633252,3979429312,608471368,2035544,88378691,3246999808,79105857,3229967940,1147539572,2215639097,638,29393729,1164369643,192282501,992246912,4068806400,2231369729,608487387,60,3800370944,822083585,356814290,3263777024,1174714127,1958774118,960783901,3783528440,2197815297,1150091714,2303262741,79105986,3229967942,1164370805,192282501,992246912,2072317696,2231369730,1938100187,1207959554,3357836427,1124073472,33574029,1210340489,608471364,1141964608,1076118667,1221036361,1418445193,2302953508,3229959656,89951559,2417652736,2210498881,2202534336,256312001,1716260023,4266232132,1975728449,3230221543,608471364,3224454472,76105062,2223720519,51236,307006720,609519874,1141964608,1210336395,1076122763,834898249,2149519296,0,347277,213323588,2210498894,3258515904,210322790,2313777995,29962704,2302764765,2336768780,12592260,3573612544,609520456,1418544472,2303459357,1279272028,1344556171,1191217992,1141910669,1209548939,539251849,1224378700,2336753803,13116548,1358888960,612139792,2337014124,255861852,102276,1149847552,2336770084,13116548,414777344,1275068416,1076124809,1418399999,2337041444,1212163164,199,2303459328,3531933816,274237772,609520456,3548712776,1207959552,3223622795,2332033024,1214784588,2336756363,76105746,2223720650,49188,4010763776,4010763968,277563593,2199667339,1223819712,2311072271,1116412994,256438808,267569194,1712343641]
								pmultPut.push([264318735,88711,608471808,264275260,80005,3071230976,3224454463,4294826985,1103114751,1153941505,80932,216596480,1728053246,8658703,0,2215631749,4294966851,258392113,17439,21531972,168594755,264800588,1716391095,1326201154,19301647,960757760,495325131,1711276033,3631597957,264976708,4294838916,1284195583,2235907108,25130185,4261013954,2303262719,4282116354,3682992127,17597455,3224436736,1090603149,1208554637,255969417,1716786359,1968116793,1993029918,3531957786,3409568373,1009009863,0,4283794703,1827274751,973078525,608487363,60,1552158464,1728053245,2215629445,4294967095,255967365,21087812,4244826560,2336555007,826025036,3380954560,3224469877,2422622443,273189704,608471368,2223720512,51236,1552501760,1358907428,2223720456,51236,4186524672,2332578047,1211900996,1076122763,610044748,1287685448,252729993,4294887556,112895,2202533888,1583052996,1547787615,1581342017,1220763457,3357840523,1207959552,3223620747,4278190080,2336757842,12592276,2303197184,4270057730,258408447,17439,2215625529,4294966515,264865126,4294893700,1103136255,29770767,4237814210,1153957887,15396,2296971264,2432696316,2425393296]*) ; :(
			pmultPutConst	:=	[1447122753,1413567809,1398167381,3102507336,822083584,3163244790,73764,2357807104,65572,3599321344,1304660300,49008521,4035565193,1711363725,4668547,826667637,1090776036,2302989449,1418543584,1097204004,4668547,822600,76409205,1157006610,2500846217,1216029764,1344556169,1224051021,1478771849,1157138764,2199369487,3511160800,3640084712,1141366915,255975481,826655815,703410624,2311162306,8397956,1116536832,613714424,156,2198071489,2223571392,33828,65061120,2552530057,1090519040,4280566925,3364471433,21545513,2223589568,34852,4160834560,2082755721,612665672,144,612666696,168,608471368,2223851616,44068,1149847552,2370398244,2303201351,1718625348,8658703,0,88378690,3246999808,1124382479,1958774118,960783888,92540880,1090519043,3942760579,2235918047,2148234706,8070268,67798287,4135911424,67273999,1153892352,15396,2369978368,1140981836,1076118665,5635905,608471876,3330885952,2311227720,3229959656,88902982,1713337344,8658703,0,3229860233,3263383553,213323522,1250518603,3359196414,2302995061,1149846720,826621988,2303026880,2336769540,1096295500,1157649919,2303321221,1149977794,2215591972,376,272665928,264714569,994886291,259007572,3255353491,56132623,2202075136,2249133308,846,2149878923,2231369728,25432009,1090519043,2198320911,1097204217,2215576201,888,1203179329,49906434,1116291430,2038697730,1090519043,71808783,1711536515,71469377,56394767,255918080,2198226871,1097204985,252068489,207748,3071230208,4186114119,2302764549,2215577666,782,1203179329,133792522,1116291430,260378378,1090519043,206026511,1116291430,505868,2088960000,1980136484,2357938245,34852,2626374656,36900,1305620736,822742157,255944393,2199061615,255918529,1209074705,957399683,8660108,3849781248,2552532107,16777216,613170120,156,3263789684,1090633859,1460451087,1724135745,1376553281,3263784566,213323585,2302764631,1351438860,3560521985,255939190,1716980919,1376553281,1090670733,1081529401,213323585,2302764631,1351438860,3560521987,255929974,1716980919,1376553281,1090801805,477549625,213323585,96502615,1724135745,1376553281,255920758,1715934391,1108642113,608471880,29962576,1418284277,21250084,1284197573,2303483940,2302764786,2336752140,16786564,2336751616,1214784588,2336489611,2303203392,1210065996,4282452107,3162706005,44068,2337014016,255861844]
								pmultPutConst.push([73604,1418284032,2303213604,3108512836,24,5635905,2888078475,1275068416,1076122763,51016,1275068416,2231922825,1351175378,1418414096,2232371236,220,613190472,256,2333182792,11019404,2336751616,76105746,2223720650,65572,4010763776,4010763968,277563593,2199667339,1223819712,2311072271,1116412994,256438808,267569194,1712343641,264318735,65159,608471808,264275260,47749,3071230976,3224454423,4294763497,2035711,2215638661,4294966546,258392113,17439,1090603149,1208554637,3071264905,963007252,745885460,678874681,1976730982,3352181219,3941444,251658240,4294763908,3221307903,1009009863,1,4294759913,2035711,2215626297,4294966466,1959953766,3133179360,1,1103250447,1911144449,2432696316,3909257544,4294967093,273189704,609519948,1149847624,4282466340,2303461461,1442791921,608471816,1418414140,2337030180,2236097620,1384729792,1183059728,3103784959,1,3099885896,1526726656,1096638302,1096630620,3277799774,2089009201,252083236,4294801543,3071230463,2302764551,112642,3219718144,1224736765,2395275,1275068417,4282509961,2336757845,16786572,2303197184,4276349185,3224502271,347541313,2302764615,2202550804,960561600,3924654020,4294966764,1153941553,80932,21037056,4227131840,96010239,3909091328,4294966538,1208,4244695296,112787455,3909091328,4294966518,440,4243384576,62455807,3909091328,4294966498,696,4242073856,2425421823,2425393296]*)
			pmultPutNoDel	:=	[1447122753,1413567809,1398167381,2565636424,1140850688,2397323,1224736769,2303249801,2223590614,61476,3481881856,608487240,1080,3531949312,3224444020,4202255,2022556297,2202101249,2298500924,32601592,1149847744,2303539236,1308133884,2202140297,3511226340,3707193836,132416321,1157380417,837240591,3760801005,610568516,608471388,149455720,2198071489,1149829568,3770770468,608471299,4282879340,2313169220,1147151428,21553289,1149847744,21788708,1149847800,2370400292,2303201351,1213211716,2284094605,1207959552,1076118665,612666696,140,608471368,1223199048,2303246337,2483243202,61476,981689856,830738176,1140850691,2395275,1157627905,2232404357,256,103058765,1015234918,2215575588,816,609519944,309552,385810432,608996168,3347663160,2336757503,1211114580,3071263625,1725051138,822577473,2302764736,255918663,1713636535,1711428489,2336818057,2336751685,2202543180,2337014213,1279272012,2336553609,2303203392,1210065996,1459554443,616334096,140,3297331457,37913615,414777344,4278190080,2223719446,35876,13060096,0,142117196,274237768,264275269,134021,1435191552,613190400,136,1209174856,1237976201,1711297931,1723920143,2345266959,3229817922,256438785,1116323882,407014172,705644786,1494217416,258347082,2249179439,4294967021,1290963272,1459612041,1166625048,4275824896,258408447,17439,609519944,309552,385810432,608996168,3347663160,2336757503,1211114580,3375481737,3071278981,2302764546,1097204303,2215577481,4294967062,610024264,1133332560,3264417552,264649033,3255353491]
								pmultPutNoDel.push([28476431,4286775296,2844135180,2332033025,2237408332,2105806793,1090519041,2198255375,2305163769,4253290243,1090519041,38188815,1711470979,251806601,134020,3071230208,4186113094,1133078019,3917745924,1090519041,105297679,1711602051,252068745,108420,3071230208,4186114118,1133078021,2307133192,1090519041,172406543,1711798659,252330889,103301,3071230208,2305166406,129502275,2197815296,106964092,2336767606,1282942028,1881427083,2370622001,3375434500,1863270758,3246592260,286212353,2202537988,1278939330,3899810852,1814318219,1278855169,2215602212,4294966830,4202255,3229860489,3071230209,3342423564,1393330534,4262757903,3263823871,213323585,210331222,22056275,2249185081,4294966782,213323585,210331222,38833491,2249185081,4294966762,213323585,210331222,55610707,2249185081,4294966742,213323585,210331222,72387923,2249185081,4294966722,213323585,96502614,2305214265,2249151244,4294966702,347541313,344548934,4255181123,258408447,17439,604277065,4294835945,2149519359,0,273189704,1275614975,1459616137,1552501000,4276686884,1728053244,8658703,0,2089009201,252076068,4294899079,3071230463,59336198,440,4281919744,2422669311,255967281,1715868855,1212355721,956416131,3924785095,4294966578,8658703,0,440,3296806912,152,1566531163,1564564545,1598119489,2149519299,0,3790323761,1464,4270713088,2422669311,1208,4269926656,258408447,17439,1720,4268878080,258408447,17439,440,4267829504,258408447,17439,952,4266780928,258408447,17439,696,4265732352,2425421823,2425393296]*)
			pforEachVal		:=	[1447122753,1413567809,1398167381,1223459656,948126054,3465103616,613714248,152,1288079692,2820967561,251658240,98180,2379952384,2204500291,1207977532,2370356105,4017422380,1158056777,1217129777,1959363864,9129078,1290438980,13974669,1224736768,1221606539,1450508165,266613061,17439,2336807813,812912727,1711716111,812974649,3375480881,778443755,8658703,0,1152847684,2202534402,1147536064,1963328571,29459215,3900037433,708608870,2418963456,1212123976,3094740869,2332461897,2202081352,960561605,3096081101,1,1220838216,1566531163,1564564545,1598119489,2223720643,47140,1334528000,3918087432,612666180,176,608471368,613744416,168,268433539,33412,2232778240,2210231488,2232353272,4294967128,1224509769,2481667979,3137271939,1,4282549519,2336817151,609519879,1334528060,1149847560,2336763940,9970820,1358888960,2223720456,38948,1334528000,139525904,612666184,152,4294543688,2236418128,1149978852,1418407972,460602404,604277065,2198768457,2231442537,1210152402,686409609,838860799,1235217362,2336755339,76106249,244009273,18639235,3748975237,4294966968,4280216063,2422669311,3677482289,4294872041,2425393407,2425393296]
		}
		for j, raw in [pnewTable,pdestroy,prehash,remove,pput,pget,pfindKey,ptraverse,pfindVal,pmultPut,pmultPutConst,pmultPutNoDel,pforEachVal] ; The order matters.
			hashTable[j]:=hashTable.rawPut(raw)
		hashTable.init:=true
		return
	}
	initTable(){
		this.table:=this.globalAlloc(A_PtrSize)
		NumPut(this.newTable(this.size), this.table+0, 0, "Ptr")
		return
	}
	initBoundFuncs(){
		;	pnewTable	(01)	(internal use)
		;	pdestroy 	(02)	(use destory())
	    ;	prehash		(03)	(use rehash())
	    ;	remove		(04)	(use remove(key))
	    ;	pput		(05)	(use myHashTable[key]:=value)
	    ;	pget		(06)	(use value := myHashTable[key])
	    ;	pfindKey	(07)	(use HasKey())
		;	ptraverse	(08)	(use forEach(fn))
		;	pfindVal	(09)	(use hasVal() or valGetKey(value))
		;	pmultPut	(10)	(use splitAdd())
		;	pmultPutCV	(11)	(use splitAdd())
		;	pmultPutND	(12)	(use splitAdd())
		;	forEachVal	(13)	(use forEachVal())
		this[2] 	:= func("dllCall").bind(hashTable[2],  "Ptr", this.table, "Ptr", hashTable.fnLib, "Cdecl")															; destroy
		this[3] 	:= func("dllCall").bind(hashTable[3],  "Ptr", this.table, "Ptr", hashTable.fnLib, "Cdecl Ptr")														; rehash
		this[4]		:= func("dllCall").bind(hashTable[4],  "Ptr", this.table, "Ptr", hashTable.fnLib, "wstr") 			; , key, "Cdecl")								; remove
		this[5]		:= func("dllCall").bind(hashTable[5],  "Ptr", this.table, "Ptr", hashTable.fnLib, "wstr") 			; , key, "wstr", val, "Cdecl")						; put
		this[6]		:= func("dllCall").bind(hashTable[6],  "Ptr", this.table, "Ptr", hashTable.fnLib, "wstr") 			; , key, "Cdecl str")							; get
		this[8]		:= func("dllCall").bind(hashTable[8],  "Ptr", this.table, "Ptr", hashTable.fnLib, "ptr") 			; this.icbfn/udfn, "uint", cbid,"ptr",uParams, "Cdecl")		; traverse
		this[9]		:= func("dllCall").bind(hashTable[9],  "Ptr", this.table, "Ptr", hashTable.fnLib, "wstr") 			; val, "Cdecl ptr")								; findVal
		this[10]	:= func("dllCall").bind(hashTable[10], "Ptr", this.table, "Ptr", hashTable.fnLib) 					; "wstr", keys, "wstr", vals, "wstr", del,"Cdecl")	; multPut
		this[11]	:= func("dllCall").bind(hashTable[11], "Ptr", this.table, "Ptr", hashTable.fnLib) 					; "wstr", keys, "wstr", vals, "wstr", del,"Cdecl")	; multPutConstVal
		this[12]	:= func("dllCall").bind(hashTable[12], "Ptr", this.table, "Ptr", hashTable.fnLib) 					; "wstr", keys, "wstr", vals, "int", constVal, "Cdecl")	; multPutNoDel
		this[13]	:= func("dllCall").bind(hashTable[13], "Ptr", this.table, "Ptr", hashTable.fnLib, "wstr") 			; val, "ptr", this.icbfn/udfn, "uint", cbid,"ptr",uParams, "Cdecl")		; forEachVal
		return
	}
	newTable(sz){ ; Called by initTable()
		static pmalloc:=DllCall("Kernel32.dll\GetProcAddress", "Ptr", DllCall("Kernel32.dll\GetModuleHandle", "Str", "MSVCRT.dll", "Ptr"), "AStr", "malloc", "Ptr")
		return DllCall(hashTable[1], "Uint", sz, "Ptr", pmalloc, "Ptr", hashTable.tableSizes, "double", this.maxLoad, "Uint", this.nextSize, "Cdecl ptr")
	}
		
	; Growing list of array sizes
	; Each size is approximately double the previous size. 
	; All sizes are prime
	; maketableSizesArray() relies on this array being assigned above it.
	static arraySizes:= [2
						,5
						,11
						,23
						,53
						,113
						,251
						,509
						,1019
						,2039
						,4079
						,8179
						,16369
						,32749
						,65521
						,131063
						,262133
						,524269
						,1048571
						,2097143
						,4194287
						,8388587
						,16777183
						,33554393
						,67108837
						,134217689
						,268435399
						,536870879
						,1073741789
						,2147483629
						,4294967291]
	maketableSizesArray(){
		static init := hashTable.maketableSizesArray()
		local tableSizes, k, sz
		tableSizes := hashTable.globalAlloc(this.arraySizes.length()*4)
		for k, sz in hashTable.arraySizes
			NumPut(sz, tableSizes+0,(k-1)*4, "int")
		hashTable.tableSizes:=tableSizes
		return
	}
	makeFnLib(){
		; See hash.h
		/*
		typedef struct functionLib {
			_malloc					pmalloc;
			_free					pfree;
			findKey					pfindKey;
			_rehash					prehash;
			_newHashTable			pnewHashTable;
			//mb						pmb;	// db
		} fnLib, *pfnLib;
		*/
		
		local fnLib := hashTable.globalAlloc(5*A_PtrSize) ; Set to 6*A_PtrSize when using db.  Can be freed via freeFnLib() (you shouldn't)
		local pmalloc:=DllCall("Kernel32.dll\GetProcAddress", "Ptr", DllCall("Kernel32.dll\GetModuleHandle", "Str", "MSVCRT.dll", "Ptr"), "AStr", "malloc", "Ptr")
		local pfree:=DllCall("Kernel32.dll\GetProcAddress", "Ptr", DllCall("Kernel32.dll\GetModuleHandle", "Str", "MSVCRT.dll", "Ptr"), "AStr", "free", "Ptr")
		NumPut(pmalloc,					fnLib+0, A_PtrSize*0, "Ptr")
		NumPut(pfree,					fnLib+0, A_PtrSize*1, "Ptr")
		NumPut(hashTable[7],			fnLib+0, A_PtrSize*2, "Ptr")
		NumPut(hashTable[3],			fnLib+0, A_PtrSize*3, "Ptr")
		NumPut(hashTable[1], 			fnLib+0, A_PtrSize*4, "Ptr")
		;NumPut(registerCallback("mb","Cdecl"), 	fnLib+0, A_PtrSize*5, "Ptr") ; db
		hashTable.fnLib:=fnLib
		return
	}
	initSize(target:=0){
		; Picks the closest available size greater or equal to target.
		local k, sz
		for k, sz in hashTable.arraySizes {
			if sz >= target {
				this.size:=sz
				this.nextSize:=k
				return this.size
			}
		}		
		; this should be rare. Allocating max size might not even succeed. Not tested.
		; Indicies in c source are unsigned int, hence max index is 2**32 (4294967296). 
		throw Exception("The requested size (" target ") is to large. Maximum size is: " hashTable.arraySizes[hashTable.arraySizes.length()] ".",-1)
		return
	}
	rawPut(raw){	; Called by initBin, for writing binary code to memory.
		; Url:
		;	- https://msdn.microsoft.com/en-us/library/windows/desktop/aa366887(v=vs.85).aspx 	(VirtualAlloc function)
		;	- https://msdn.microsoft.com/en-us/library/windows/desktop/aa366786(v=vs.85).aspx 	(Memory Protection Constants)
		local k, i, bin
		static flProtect:=0x40, flAllocationType:=0x1000 ; PAGE_EXECUTE_READWRITE ; MEM_COMMIT	
		
		bin:=DllCall("Kernel32.dll\VirtualAlloc", "Uptr",0, "Ptr", raw.length()*4, "Uint", flAllocationType, "Uint", flProtect, "Ptr")
		for k, i in raw
			NumPut(i,bin+(k-1)*4,"Int")
		return bin
	}
	; For traverse
	callbackFunctions:=[]
	traverseCallbackRouter(p*){
	; int __cdecl (*callbackFn)(unsigned short*,unsigned short*,unsigned int,unsigned int,uParams);
	;traverseCallbackRouter(key,val,cbdi,hash,uParams)
		this:=Object(A_EventInfo)
		local cbid:=numget(p+0,A_PtrSize,"Uint")
		return this.callbackFunctions[cbid].call(StrGet(numget(p+0,-A_PtrSize,"Ptr")), StrGet(numget(p+0, 0,"Ptr")), numget(p+0, A_PtrSize*2,"Ptr"),numget(p+0, A_PtrSize*3,"Ptr")) ; key, val, hash, uParams
	}
	; Memory functions
	freeAllBins(){
		; Probably never wanted.
		loop 9
			hashTable.globalFree(hashTable[A_Index])
		return
	}
	freeFnLib(){
		; Probably never wanted.
		this.globalFree(hashTable.fnLib)
		return
	}
	globalAlloc(dwBytes){
		; URL:
		;	- https://msdn.microsoft.com/en-us/library/windows/desktop/aa366574(v=vs.85).aspx (GlobalAlloc function)
		static GMEM_ZEROINIT:=0x0040	; Zero fill memory
		static uFlags:=GMEM_ZEROINIT	; For clarity.
		local hMem
		if !(hMem:=DllCall("Kernel32.dll\GlobalAlloc", "Uint", uFlags, "Ptr", dwBytes, "Ptr"))
			throw exception("GlobalAlloc failed for dwBytes: " dwBytes, -2)
		return hMem
	}
	globalFree(hMem){
		; URL:
		;	- https://msdn.microsoft.com/en-us/library/windows/desktop/aa366579(v=vs.85).aspx (GlobalFree function)
		local h
		if h:=DllCall("Kernel32.dll\GlobalFree", "Ptr", hMem, "Ptr")
			throw exception("GlobalFree failed at hMem: " hMem, -2)
		return h
	}
	; Internal tree/print methods.
	buildTree(tv,parents,key,val,h,uParams){
		local id
		if !parents.haskey(h) {
			id:=tv.add(h)
			parents[h]:=id
		}
		id:=tv.add(key,parents[h])
		tv.add(val,id)
		return 1
	}
	keyvalPrint(out,key,val,h,uParams){
		out.str.= key . out.del[1] . val . out.del[2]
		return 1
	}
	keyPrint(out,key,val,h,uParams){
		out.str.= key . out.del
		return 1
	}
	valPrint(out,key,val,h,uParams){
		out.str.= val . out.del
		return 1
	}	
}